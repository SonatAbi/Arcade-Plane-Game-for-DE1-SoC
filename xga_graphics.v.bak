
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module XGA_Graphics(

	input  wire       CLOCK_50,
    input  wire [3:0] KEY,
    output wire [7:0] VGA_R,
    output wire [7:0] VGA_G,
    output wire [7:0] VGA_B,
    output wire       VGA_CLK,
    output wire       VGA_BLANK_N,
    output wire       VGA_SYNC_N,
    output wire       VGA_HS,
    output wire       VGA_VS);

   wire 	      rst;
   wire 	      in_clock;
   wire 	      sys_clock;
   wire 	      locked;

   wire 	      hsync;
   wire 	      vsync;
   wire 	      csync;
   wire 	      video_on;
   wire [10:0] 	      pixel_x;
   wire [10:0] 	      pixel_y;
   wire               ball_move;
   wire [10:0] 	      ball_x;
   wire [10:0] 	      ball_y;
   wire 	      ball_color;
	      
  // clockgen myclockgen(rst, 
//		       in_clock, 
//		       sys_clock, 
//		       locked);
  
  clockgen my_clockgen(in_clock,
							rst,
							sys_clock,
							locked);
							
   vesasync myvesa(sys_clock, 
		   rst, 
		   hsync, 
		   vsync, 
		   csync, 
		   video_on, 
		   pixel_x, 
		   pixel_y);
   
	//Governs movement of the ball, uses ball_move to decide when to refresh the ball 
   ballmover #(16, 1024, 768) mymover(sys_clock,
				      rst,
				      ball_move,
				      ball_x,
				      ball_y);
   
	//Uses current position of the ball and the current pixel values to say what color to draw
   ballpixel #(16) myball(sys_clock, 
			  rst, 
			  ball_x,  
			  ball_y, 
			  pixel_x, 
			  pixel_y, 
			  ball_color);
   
   assign rst         = ~KEY[0];
   assign in_clock    = CLOCK_50;
   assign ball_move   = (pixel_y == 769) && (pixel_x == 0); //asserted when you finish drawing one frame, use this to refresh the position of the ball
   assign VGA_HS      = hsync;
   assign VGA_VS      = vsync;
   assign VGA_SYNC_N  = ~csync;
   assign VGA_BLANK_N = video_on;
   assign VGA_B       = ball_color ? 8'h0 : 8'hff;
   assign VGA_R       = ball_color ? 8'hff : 8'h0;
   assign VGA_G       = 8'h0;
   assign VGA_CLK     = sys_clock;

endmodule
