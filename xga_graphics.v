
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module XGA_Graphics(

	 input  wire       CLOCK_50,
    input  wire [3:0] KEY,
    output wire [7:0] VGA_R,
    output wire [7:0] VGA_G,
    output wire [7:0] VGA_B,
    output wire       VGA_CLK,
    output wire       VGA_BLANK_N,
    output wire       VGA_SYNC_N,
    output wire       VGA_HS,
    output wire       VGA_VS);

   wire 	      rst;
   wire 	      in_clock;
   wire 	      sys_clock;
   wire 	      locked;

   wire 	      hsync;
   wire 	      vsync;
   wire 	      csync;
   wire 	      video_on;
   wire [10:0] 	      pixel_x;
   wire [10:0] 	      pixel_y;
	wire [23:0]  			color;
	
   wire               	move;
	
   wire [10:0] 	      plane_x;
   wire [10:0] 	      plane_y;
   wire [2:0]  			plane_color;
	
	
	wire [10:0] 			water_x1, water_x2, water_x3, water_x4, water_x5, water_x6, water_x7, water_x8, water_x9, water_x10, water_x11, water_x12, water_x13, water_x14, water_x15, water_x16, water_x17, water_x18, water_x19, water_x20;
   wire [10:0] 			water_y1, water_y2, water_y3, water_y4, water_y5, water_y6, water_y7, water_y8, water_y9, water_y10, water_y11, water_y12, water_y13, water_y14, water_y15, water_y16, water_y17, water_y18, water_y19, water_y20;
	wire [19:0]	   		water_color;
	
	wire [10:0] 	      lazer_x;
   wire [10:0] 	      lazer_y;
   wire 			  			lazer_color;
	
	wire [10:0]   			rock_x1, rock_x2, rock_x3, rock_x4;
	wire [10:0]   			rock_y1, rock_y2, rock_y3, rock_y4;
	wire [1:0]				rock_color1, rock_color2, rock_color3, rock_color4;
	
	wire 						rock_color_orange , rock_color_brown;
	
	
	wire col1, col2, col3, col4;
	
	wire colall;
	
	wire planehit;
	
	
	
	wire left, right, fire;
	
	assign collall = col1 || col2 || col3 || col4;
	
	assign rock_color_brown = rock_color1[0] || rock_color2[0] || rock_color3[0] ;
	assign rock_color_orange = rock_color1[1] || rock_color2[1] || rock_color3[1] ;
	
	assign in_clock    = CLOCK_50;
   
	assign rst         = ~KEY[0];
	assign right 		 = ~KEY[1];
	assign left 		 = ~KEY[2];
	assign fire 		 = ~KEY[3];
	
   
	assign move  = (pixel_y == 769) && (pixel_x == 0); //asserted when you finish drawing one frame, use this to refresh the position of the ball
   
	assign color = (plane_color == 3'd1) ? 24'h050505 :
						(plane_color == 3'd2) ? 24'hffffff :
						(plane_color == 3'd3) ? 24'hff0000 :
						(plane_color == 3'd4) ? 24'h000000 :
						(rock_color_brown == 1'd1 && pixel_x >= 256 && pixel_x < 768 && pixel_y >= 256) ? 24'h663300 :
						(rock_color_orange == 1'd1 && pixel_x >= 256 && pixel_x < 768 && pixel_y >= 256) ? 24'hec7812 :
						(lazer_color == 1'd1 && pixel_x >= 256 && pixel_x < 768 && pixel_y >= 256) ? 24'hff0000 : 
						(water_color != 20'd0 && pixel_x >= 256 && pixel_x < 768 && pixel_y >= 256) ? 24'hffffff : 
						(pixel_x >= 256 && pixel_x < 768 && pixel_y >= 256) ? 24'h0077be : 24'h0;
	
	assign VGA_HS      = hsync;
   assign VGA_VS      = vsync;
   assign VGA_SYNC_N  = ~csync;
   assign VGA_BLANK_N = video_on;
   assign VGA_R       = color[23:16]; //plane_color ? 8'hff : 8'h0;
   assign VGA_G       = color[15:8]; //plane_color ? 8'h0 : 8'h77;
	assign VGA_B       = color[7:0]; //plane_color ? 8'h0 : 8'hbe;
   assign VGA_CLK     = sys_clock;
	
	
	      
  
  clockgen my_clockgen(in_clock,
							rst,
							sys_clock,
							locked);
							
   vesasync myvesa(sys_clock, 
		   rst, 
		   hsync, 
		   vsync, 
		   csync, 
		   video_on, 
		   pixel_x, 
		   pixel_y);
			
	////////////collision///////////////////
	colcheck c1(lazer_x,
					lazer_y,
					rock_x1,
					rock_y1,
					col1);
	
	colcheck c2(lazer_x,
					lazer_y,
					rock_x2,
					rock_y2,
					col2);
	
	colcheck c3(lazer_x,
					lazer_y,
					rock_x3,
					rock_y3,
					col3);
					
	colcheck c4(lazer_x,
					lazer_y,
					rock_x4,
					rock_y4,
					col4);
					
	plhit cp(rock_x1,
				rock_y1,
				rock_x2,
				rock_y2,
				rock_x3,
				rock_y3,
				rock_x4,
				rock_y4,
				plane_x,  
			   plane_y,
				planehit);
	
	////////////////////////////////
   
	///////////Your Plane//////////////////
   planemover planemovemodule(sys_clock,
				      rst,
				      move,
						left,
						right,
						planehit,
				      plane_x,
				      plane_y);
						
   planepixel planedrawmodule(sys_clock, 
			  rst, 
			  plane_x,  
			  plane_y, 
			  pixel_x, 
			  pixel_y, 
			  plane_color);
			  
	///////////////////////////////////////
	
	///////////////Lazer///////////////////
	lazermover lazermovemodule(sys_clock,
				      rst,
				      move,
						fire,
						collall,
						plane_x + 11'd12,
						plane_y - 11'd5,
				      lazer_x,
				      lazer_y);
						
   lazerpixel lazerdrawmodule(sys_clock, 
			  rst, 
			  lazer_x,  
			  lazer_y, 
			  pixel_x, 
			  pixel_y, 
			  lazer_color);
	
	///////////////////////////////////////
	
	///////////Rocks///////////////////////
	
	rockmover rockmovemodule1(sys_clock,
				      rst,
				      move,
						col1,
						planehit,
						510,
						60,
				      rock_x1,
				      rock_y1);
	
	rockpixel rockdrawmodule1(sys_clock, 
			  rst, 
			  rock_x1,  
			  rock_y1, 
			  pixel_x, 
			  pixel_y, 
			  rock_color1);
			  
	rockmover rockmovemodule2(sys_clock,
				      rst,
				      move,
						col2,
						planehit,
						350,
						128,
				      rock_x2,
				      rock_y2);
	
	rockpixel rockdrawmodule2(sys_clock, 
			  rst, 
			  rock_x2,  
			  rock_y2, 
			  pixel_x, 
			  pixel_y, 
			  rock_color2);
			  
	rockmover rockmovemodule3(sys_clock,
				      rst,
				      move,
						col3,
						planehit,
						700,
						170,
				      rock_x3,
				      rock_y3);
	
	rockpixel rockdrawmodule3(sys_clock, 
			  rst, 
			  rock_x3,  
			  rock_y3, 
			  pixel_x, 
			  pixel_y, 
			  rock_color3);
	
	rockmover rockmovemodule4(sys_clock,
				      rst,
				      move,
						col4,
						planehit,
						415,
						200,
				      rock_x4,
				      rock_y4);
	
	rockpixel rockdrawmodule4(sys_clock, 
			  rst, 
			  rock_x4,  
			  rock_y4, 
			  pixel_x, 
			  pixel_y, 
			  rock_color4);
	
	///////////////////////////////////////
	
	///////////Water Graphics//////////////
	watermover watermovemodule1(sys_clock,
				      rst,
				      move,
						256,
						128,
				      water_x1,
				      water_y1);
	
	waterpixel waterdrawmodule1(sys_clock, 
			  rst, 
			  water_x1,  
			  water_y1, 
			  pixel_x, 
			  pixel_y, 
			  water_color[0]);
	
	watermover watermovemodule2(sys_clock,
				      rst,
				      move,
						384,
						128,
				      water_x2,
				      water_y2);
	
	waterpixel waterdrawmodule2(sys_clock, 
			  rst, 
			  water_x2,  
			  water_y2, 
			  pixel_x, 
			  pixel_y, 
			  water_color[1]);
	
	watermover watermovemodule3(sys_clock,
				      rst,
				      move,
						512,
						128,
				      water_x3,
				      water_y3);
	
	waterpixel waterdrawmodule3(sys_clock, 
			  rst, 
			  water_x3,  
			  water_y3, 
			  pixel_x, 
			  pixel_y, 
			  water_color[2]);
			  
	watermover watermovemodule4(sys_clock,
				      rst,
				      move,
						640,
						128,
				      water_x4,
				      water_y4);
	
	waterpixel waterdrawmodule4(sys_clock, 
			  rst, 
			  water_x4,  
			  water_y4, 
			  pixel_x, 
			  pixel_y, 
			  water_color[3]);
	////////////////first line end/////////////////
	watermover watermovemodule5(sys_clock,
				      rst,
				      move,
						256,
						256,
				      water_x5,
				      water_y5);
	
	waterpixel waterdrawmodule5(sys_clock, 
			  rst, 
			  water_x5,  
			  water_y5, 
			  pixel_x, 
			  pixel_y, 
			  water_color[4]);
			 
	watermover watermovemodule6(sys_clock,
				      rst,
				      move,
						384,
						256,
				      water_x6,
				      water_y6);
	
	waterpixel waterdrawmodule6(sys_clock, 
			  rst, 
			  water_x6,  
			  water_y6, 
			  pixel_x, 
			  pixel_y, 
			  water_color[5]);
	
	watermover watermovemodule7(sys_clock,
				      rst,
				      move,
						512,
						256,
				      water_x7,
				      water_y7);
	
	waterpixel waterdrawmodule7(sys_clock, 
			  rst, 
			  water_x7,  
			  water_y7, 
			  pixel_x, 
			  pixel_y, 
			  water_color[6]);
	
	watermover watermovemodule8(sys_clock,
				      rst,
				      move,
						640,
						256,
				      water_x8,
				      water_y8);
	
	waterpixel waterdrawmodule8(sys_clock, 
			  rst, 
			  water_x8,  
			  water_y8, 
			  pixel_x, 
			  pixel_y, 
			  water_color[7]);
	///////////line 2 ending		  
	watermover watermovemodule9(sys_clock,
				      rst,
				      move,
						256,
						384,
				      water_x9,
				      water_y9);
	
	waterpixel waterdrawmodule9(sys_clock, 
			  rst, 
			  water_x9,  
			  water_y9, 
			  pixel_x, 
			  pixel_y, 
			  water_color[8]);
			  
	watermover watermovemodule10(sys_clock,
				      rst,
				      move,
						384,
						384,
				      water_x10,
				      water_y10);
	
	waterpixel waterdrawmodule10(sys_clock, 
			  rst, 
			  water_x10,  
			  water_y10, 
			  pixel_x, 
			  pixel_y, 
			  water_color[9]);
			 
	watermover watermovemodule11(sys_clock,
				      rst,
				      move,
						512,
						384,
				      water_x11,
				      water_y11);
	
	waterpixel waterdrawmodule11(sys_clock, 
			  rst, 
			  water_x11,  
			  water_y11, 
			  pixel_x, 
			  pixel_y, 
			  water_color[10]);
	
	watermover watermovemodule12(sys_clock,
				      rst,
				      move,
						640,
						384,
				      water_x12,
				      water_y12);
	
	waterpixel waterdrawmodule12(sys_clock, 
			  rst, 
			  water_x12,  
			  water_y12, 
			  pixel_x, 
			  pixel_y, 
			  water_color[11]);
	///////////line 3 ending/////////		  
	watermover watermovemodule13(sys_clock,
				      rst,
				      move,
						256,
						512,
				      water_x13,
				      water_y13);
	
	waterpixel waterdrawmodule13(sys_clock, 
			  rst, 
			  water_x13,  
			  water_y13, 
			  pixel_x, 
			  pixel_y, 
			  water_color[12]);
			  
	watermover watermovemodule14(sys_clock,
				      rst,
				      move,
						384,
						512,
				      water_x14,
				      water_y14);
	
	waterpixel waterdrawmodule14(sys_clock, 
			  rst, 
			  water_x14,  
			  water_y14, 
			  pixel_x, 
			  pixel_y, 
			  water_color[13]);
	
	watermover watermovemodule15(sys_clock,
				      rst,
				      move,
						512,
						512,
				      water_x15,
				      water_y15);
	
	waterpixel waterdrawmodule15(sys_clock, 
			  rst, 
			  water_x15,  
			  water_y15, 
			  pixel_x, 
			  pixel_y, 
			  water_color[14]);
			  
	watermover watermovemodule16(sys_clock,
				      rst,
				      move,
						640,
						512,
				      water_x16,
				      water_y16);
	
	waterpixel waterdrawmodule16(sys_clock, 
			  rst, 
			  water_x16,  
			  water_y16, 
			  pixel_x, 
			  pixel_y, 
			  water_color[15]);
	////////line 4 ending//////////////////
	
	watermover watermovemodule17(sys_clock,
				      rst,
				      move,
						256,
						640,
				      water_x17,
				      water_y17);
	
	waterpixel waterdrawmodule17(sys_clock, 
			  rst, 
			  water_x17,  
			  water_y17, 
			  pixel_x, 
			  pixel_y, 
			  water_color[16]);
	
	watermover watermovemodule18(sys_clock,
				      rst,
				      move,
						384,
						640,
				      water_x18,
				      water_y18);
	
	waterpixel waterdrawmodule18(sys_clock, 
			  rst, 
			  water_x18,  
			  water_y18, 
			  pixel_x, 
			  pixel_y, 
			  water_color[17]);
	
	watermover watermovemodule19(sys_clock,
				      rst,
				      move,
						512,
						640,
				      water_x19,
				      water_y19);
	
	waterpixel waterdrawmodule19(sys_clock, 
			  rst, 
			  water_x19,  
			  water_y19, 
			  pixel_x, 
			  pixel_y, 
			  water_color[18]);
	
	watermover watermovemodule20(sys_clock,
				      rst,
				      move,
						640,
						640,
				      water_x20,
				      water_y20);
	
	waterpixel waterdrawmodule20(sys_clock, 
			  rst, 
			  water_x20,  
			  water_y20, 
			  pixel_x, 
			  pixel_y, 
			  water_color[19]);
	///////////////////////////////////////
	

endmodule
